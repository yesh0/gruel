// Code generated by command: go run caller.go -out caller.s -stubs caller.go. DO NOT EDIT.

#include "textflag.h"
#include "funcdata.h"

// func CallJit(f uint64, args []uint64, stack uint64) uint64
TEXT ·CallJit(SB), NOSPLIT|NOFRAME, $16-48
	NO_LOCAL_POINTERS
jit_entry:
	// top(SI) = SP - max_stack_size
	MOVQ SP, SI
	MOVQ stack+32(FP), DI
	SUBQ DI, SI

	// if top <= g(DI).stackguard1 { goto stack_grow }
	MOVQ (TLS), DI
	CMPQ SI, 16(DI)
	JBE  jit_stack_grow

	// System V calling conventions
	MOVQ f+0(FP), DI
	MOVQ args_base+8(FP), SI

	// Align the stack
	MOVQ SP, BX
	ORQ  $+15, SP
	INCQ SP

	// Call relative
	CALL call_jit_function+0x00(SB)

	// Restore stack
	MOVQ BX, SP

	// System V: Return value
	MOVQ AX, ret+40(FP)
	RET

jit_stack_grow:
	CALL runtime·morestack_noctxt<>+0x00(SB)
	JMP  jit_entry
